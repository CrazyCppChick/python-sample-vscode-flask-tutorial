# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger: none
resources:
  pipelines:
  - pipeline: test # Name of the pipeline resource.
    source: testPipeline # The name of the pipeline referenced by this pipeline resource.
    # trigger: true # Run app-ci pipeline when any run of security-lib-ci completes
    schedules:
    - cron: "*/5 * * * *"
      displayName: testing schedule build
      branches:
        include:
        - master

# YAML file in the main branch
# schedules:
# - cron: "*/5 * * * *"
#   displayName: testing schedule build
#   branches:
#     include:
#     - master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'
